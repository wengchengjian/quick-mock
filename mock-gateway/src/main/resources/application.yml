server:
  port: 10010
spring:
  application:
    name: gateway # 服务名称
  cloud:
    nacos:
      server-addr: localhost:8849 # nacos地址
    gateway:
      globalcors:
        add-to-simple-url-handler-mapping: true # 解决options请求被拦截问题
        corsConfigurations:
          '[/**]':
            allowedOrigins: # 允许哪些网站的跨域请求
              - "http://localhost:8090"
            allowedMethods: # 允许的跨域ajax的请求方式
              - "GET"
              - "POST"
              - "DELETE"
              - "PUT"
              - "OPTIONS"
            allowedHeaders: "*" # 允许在请求中携带的头信息
            allowCredentials: true # 是否允许携带cookie
            maxAge: 360000 # 这次跨域检测的有效期
      default-filters: # 添加一个默认过滤器 给每一个请求都会加上origin 表明请求来自网关
        - AddRequestHeader=origin,gateway
      routes: # 网关路由配置
        - id: user-service # 路由id，自定义，只要唯一即可
          # uri: http://127.0.0.1:8081 # 路由的目标地址 http就是固定地址
          uri: lb://userservice # 路由的目标地址 lb就是负载均衡，后面跟服务名称
          predicates: # 路由断言，也就是判断请求是否符合路由规则的条件
            - Path=/user/** # 这个是按照路径匹配，只要以/user/开头就符合要求
        - id: role-service
          uri: lb://roleservice
          predicates:
            - Path=/role/**
        - id: project-service
          uri: lb://projectservice
          predicates:
            - Path=/project/**
        - id: interfaces-service
          uri: lb://interfacesservice
          predicates:
            - Path=/interfaces/**
        - id: group-service
          uri: lb://groupservice
          predicates:
            - Path=/group/**
        - id: role-user-service
          uri: lb://roleuserservice
          predicates:
            - Path=/roleuser/**
        - id: user-project-service
          uri: lb://userprojectservice
          predicates:
            - Path=/userproject/**
